debug=net
insmod time
insmod at_keyboard
insmod ntfs
insmod part_msdos
insmod part_gpt

insmod efinet
insmod net
insmod tftp
insmod boot 
insmod configfile 
insmod loadenv 
insmod linux 
insmod echo 
insmod chain 

insmod gzio
insmod efi_gop
insmod efi_uga
insmod hfsplus 
insmod fat 
insmod ext2 
insmod normal 
insmod search 
insmod loadbios 
insmod video_fb 
insmod videotest 
insmod font 
insmod gfxterm 
insmod memdisk 
insmod tar 
insmod tftp 
insmod reboot 
insmod iso9660

net_add_addr ne0 efinet0  192.168.100.254
net_add_addr ne1 efinet1  192.168.100.253
net_add_addr ne2 efinet2  192.168.100.253








set root=(memdisk)

set default=0
set timeout=0
if [ x${net_ne0_mac} == x0a:e5:b8:37:3e:51 -o x${net_ne1_mac} == x0a:e5:b8:37:3e:51 ]; then set timeout=15 ; set default=1 ; fi # hostname: ws-000.local
if [ x${net_ne0_mac} == xe2:c0:ed:fd:42:19 -o x${net_ne1_mac} == xe2:c0:ed:fd:42:19 ]; then set timeout=15 ; set default=1 ; fi # hostname: ws-001.local
if [ x${net_ne0_mac} == x0e:1c:ee:f6:05:8a -o x${net_ne1_mac} == x0e:1c:ee:f6:05:8a ]; then set timeout=15 ; set default=1 ; fi # hostname: ws-002.local
if [ x${net_ne0_mac} == x20:cf:30:66:ac:7e -o x${net_ne1_mac} == x20:cf:30:66:ac:7e ]; then set timeout=15 ; set default=1 ; fi # hostname: ws-003.local
if [ x${net_ne0_mac} == xe0:4f:43:e6:bf:cc -o x${net_ne1_mac} == xe0:4f:43:e6:bf:cc ]; then set timeout=0 ; set default=0 ; fi # hostname: 
if [ x${net_ne0_mac} == x74:d4:35:ec:fb:6c -o x${net_ne1_mac} == x74:d4:35:ec:fb:6c ]; then set timeout=0 ; set default=1 ; fi # hostname: barton01.local
if [ x${net_ne0_mac} == x74:d4:35:ee:0b:35 -o x${net_ne1_mac} == x74:d4:35:ee:0b:35 ]; then set timeout=0 ; set default=1 ; fi # hostname: barton01.local
if [ x${net_ne0_mac} == x74:d4:35:1d:4f:b8 -o x${net_ne1_mac} == x74:d4:35:1d:4f:b8 ]; then set timeout=0 ; set default=1 ; fi # hostname: barton16.local
if [ x${net_ne0_mac} == x74:d4:35:1d:4f:ba -o x${net_ne1_mac} == x74:d4:35:1d:4f:ba ]; then set timeout=0 ; set default=1 ; fi # hostname: barton16.local
if [ x${net_ne0_mac} == x74:d4:35:ee:0b:7a -o x${net_ne1_mac} == x74:d4:35:ee:0b:7a ]; then set timeout=0 ; set default=0 ; fi # hostname: barton04.local
if [ x${net_ne0_mac} == xc8:d3:ff:ba:6c:37 -o x${net_ne1_mac} == xc8:d3:ff:ba:6c:37 ]; then set timeout=0 ; set default=0 ; fi # hostname: tbc005.local
if [ x${net_ne0_mac} == xc6:a1:21:0c:67:ad -o x${net_ne1_mac} == xc6:a1:21:0c:67:ad ]; then set timeout=0 ; set default=0 ; fi # hostname: ws-004.local

echo "net_ne0_mac: ${net_ne0_mac}"
echo "net_ne1_mac: ${net_ne1_mac}"
echo "net_ne2_mac: ${net_ne2_mac}"
set fallback=2

menuentry 'Fedora 35' --class os --id Fedora.35 {
     echo Reading kernel
     linux  /vmlinuz  quiet nb_provisionurl=tftp://192.168.1.231/netbootcd-ipxe-bootchain/boot/init.sh  nofstab waitusb norestore base console=tty0  console=ttyS0,115200n8
     echo Reading ramdisk
     initrd /initrd
     echo booting...
}                                                                             

menuentry 'Local Windows' --class os --id Local.Windows {
        echo 'Loading Windows bootmgr...'
	set root='(hd0,gpt1)'
        search --file --set=root /EFI/Microsoft/Boot/bootmgfw.efi
        chainloader /EFI/Microsoft/Boot/bootmgfw.efi
        echo 'Done'

}

menuentry 'Reboot' --id reboot {
	reboot
}                                                                             

menuentry 'TinyCore Boot Menu' --class os {
     echo Reading kernel
     linux  /netbootcd/vmlinuz  quiet menu nb_provisionurl=http://192.168.1.231:81/tftp/netbootcd/init.sh  norestore base
     echo Reading ramdisk
     initrd /netbootcd/nbinit4.gz
     echo booting...
}                                                                             

menuentry 'TinyCore debug mode' --class os {
     echo Reading kernel
     linux  /netbootcd/vmlinuz  quiet nb_provisionurl=http://192.168.1.231:81/tftp/netbootcd/init.sh debug  norestore base
     echo Reading ramdisk
     initrd /netbootcd/nbinit4.gz
     echo booting...
}                                                                             

menuentry 'refind' --class os {
        echo 'Loading refind ...'
        search --label --set=root REFIND
        chainloader /EFI/BOOT/bootx64.efi
        echo 'Done'
}

menuentry 'memtest86.iso' --class os { 
	echo 'Loading Linux kernel ...'  
	linux /iso/memdisk iso
        echo 'Loading iso ...'                                          
	initrd /iso/memtest86.iso
}                                                                             










